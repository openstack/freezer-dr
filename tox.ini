[tox]
minversion = 2.0
envlist = py27,py37,pep8,pylint,docs
skipsdist = True

[testenv]
usedevelop = True
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
passenv =
    http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY

install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}
setenv =
    VIRTUAL_ENV={envdir}
    OS_TEST_PATH = ./tests/unit
    PYTHON=coverage run --source freezer_dr --parallel-mode
commands =
    find . -type f -name "*.pyc" -delete
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report -m
    rm -f .coverage
    rm -rf .testrepository

whitelist_externals =
    find
    coverage
    rm
python_files = test_*.py
norecursedirs  = .tox .venv

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:docs]
basepython = python3
commands =
  python setup.py build_sphinx

[testenv:py27]
basepython = python2.7

[testenv:py36]
basepython = python3.6

[testenv:py37]
basepython = python3.7

[testenv:pep8]
basepython = python3
commands = flake8 freezer_dr

[testenv:pylint]
basepython = python3
commands = pylint --rcfile .pylintrc freezer_dr

[testenv:genconfig]
basepython = python3
sitepackages = False
envdir = {toxworkdir}/venv
commands =
  oslo-config-generator --config-file=config-generator/freezer-dr.conf

[flake8]
# it's not a bug that we aren't using all of hacking
# H102 -> apache2 license exists
# H103 -> license is apache
# H201 -> no bare excepts
# H501 -> don't use locals() for str formatting
# H903 -> \n not \r\n
ignore = H
select = H102, H103, H201, H501, H903, H201, H306, H301, H233
show-source = True
exclude = .venv,.tox,dist,doc,test,*egg,tests

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
